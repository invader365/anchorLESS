- var page = { 'root': '', 'title': 'Compiler' }

doctype html
html(lang="es")
    head
        include includes/head
        style.style.css(type="text/css")
        script(src=page.root + 'js/libs/jquery-1.11.1.min.js')
        script(src="http://cdnjs.cloudflare.com/ajax/libs/less.js/3.11.1/less.min.js", type="text/javascript")

    body.uno.l-right-top-nav.compiler
        include includes/header_pages
        include includes/nav
    main
      section.max-width.fixed
        h2.title Live-Compiler
        .panel.primary
          code.code.less(contenteditable='true', onkeyup='compileCSS()', spellcheck="false")
          .toggle
            a.no-select(onclick="showHide()") Result
          .result(style="display:none")
            .box box
        h4 CSS
        code.code.css
    script.
      const pre = {
        less: `  div.box {
          .rounded(20px);
          .size(200px, 40px);
          .spacing(20px auto, 0);
          .gradient(to-bottom, orange, darken(#fb292d, 20%));
        }`,
        error:`Parse error: Unrecognized input`,
        type:`...`
      };
      const compileCSS = result => {
        const codeLess = document.querySelector(`.code.less`);
        const codeCss  = document.querySelector(`.code.css`);
        const styleTag = document.querySelector(`.style.css`);
        const anchorLess = "@import './anchor.less';";
        if(result) codeLess.innerHTML = eval(result).less;
        styleTag.innerHTML = anchorLess + codeLess.textContent;
        styleTag.setAttribute("type", "text/less");
        less.refreshStyles();
        codeCss.innerHTML = eval(pre).type;
        setTimeout(() => {
          codeCss.innerHTML = (styleTag.innerHTML.slice(0, 2) != '@i') ? styleTag.innerHTML : eval(pre).error
        }, 1200)
      };
      compileCSS(pre);
      const showHide = () => {
        const result = document.querySelector(`.result`);
        result.style.display = (result.style.display === 'block') ? 'none' : 'block';
      }
    include includes/footer