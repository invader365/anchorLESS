//
//  Transform properties

//
//  .backface(@visibility);
//   ------------------------------------------------------
//   backface         :  visible|hidden|initial|inherit

.backface(@visibility:_) {
    
    & when not (@visibility=_) {
        -webkit-backface-visibility: @visibility;
           -moz-backface-visibility: @visibility;
                backface-visibility: @visibility;
    }
}

//
//  .transform-origin(@x-axis, @y-axis, @z-axis);
//   ------------------------------------------------------
//   x-axis             :  left|center|right|-length-|percentage
//   y-axis             :  top|center|bottom|-length-|percentage
//   z-axis             :  -length-

.transform-origin(@x-axis:_, @y-axis:_, @z-axis:0) {

    & when not (@x-axis=_) and (@y-axis=_) {
        -webkit-transform-origin: @x-axis @y-axis @z-axis;
            -ms-transform-origin: @x-axis @y-axis @z-axis;
                transform-origin: @x-axis @y-axis @z-axis;
    }
}

//
//  .perspective(@length);
//   ------------------------------------------------------
//   length         :  -length-|none

.perspective(@length:_) {

    & when not (@length=_) {
        -webkit-perspective: @length;
           -moz-perspective: @length;
                perspective: @length;
    }
}

//
//  .resize(@direction);
//   ------------------------------------------------------
//   direction          :  none|both|horizontal|vertical|initial|inherit

.resize(@direction:_) {

    & when not (@direction=_) {
        resize: @direction;
        overflow: auto;      // Fix for Safari
    }
}

//
//  .rotate3d(@x-axis, @y-axis, @z-axis, @angle);
//   ------------------------------------------------------
//   x-axis             :  1 (x-axis rotation)|0 (no rotation)|-1 (opposite rotation direction)
//   y-axis             :  1 (y-axis rotation)|0 (no rotation)|-1 (opposite rotation direction)
//   z-axis             :  1 (z-axis rotation)|0 (no rotation)|-1 (opposite rotation direction)
//   angle              :  degree|gradian|radian|turn

.rotate3d(@x-axis:1, @y-axis:1, @z-axis:1, @angle:_) {

    & when not (@angle=_) {
        -webkit-transform+_: rotate3d(@x-axis, @y-axis, @z-axis, @angle);
            -ms-transform+_: rotate3d(@x-axis, @y-axis, @z-axis, @angle);
                transform+_: rotate3d(@x-axis, @y-axis, @z-axis, @angle);
    }
}

//
//  .scale3d(@x-axis, @y-axis, @z-axis);
//   ------------------------------------------------------
//   x-axis             :  1 (x-axis rotation)|0 (no rotation)|-1 (opposite rotation direction)
//   y-axis             :  1 (y-axis rotation)|0 (no rotation)|-1 (opposite rotation direction)
//   z-axis             :  1 (z-axis rotation)|0 (no rotation)|-1 (opposite rotation direction)

.scale3d(@x-axis:_, @y-axis:_, @z-axis:_) {

    & when not (@x-axis=_) and not (@y-axis=_) and not (@z-axis=_) {
        -webkit-transform+_: scale3d(@x-axis, @y-axis, @z-axis);
            -ms-transform+_: scale3d(@x-axis, @y-axis, @z-axis);
                transform+_: scale3d(@x-axis, @y-axis, @z-axis);
    }
}

//
//  .skew(@transform);
//   ------------------------------------------------------
//   x-axis             :  1 (x-axis rotation)|0 (no rotation)|-1 (opposite rotation direction)
//   y-axis             :  1 (y-axis rotation)|0 (no rotation)|-1 (opposite rotation direction)

.skew(@x-axis:_, @y-axis:_) {

    & when not (@x-axis=_) and not (@y-axis=_) {
        -webkit-transform+_: skewX(@x-axis) skewY(@y-axis);
            -ms-transform+_: skewX(@x-axis) skewY(@y-axis);
                transform+_: skewX(@x-axis) skewY(@y-axis);
    }
}

//
//  .transform(@function);
//   ------------------------------------------------------
//   transform          :  none|transform-functions|initial|inherit

.transform(@function:_) {

    & when not (@function=_) {
        -webkit-transform+_: @function;
            -ms-transform+_: @function;
                transform+_: @function;
    }
}


//
//  .translate3d(@x-axis, @y-axis, @z-axis);
//   ------------------------------------------------------
//   x-axis             :  -length-|percentage
//   y-axis             :  -length-|percentage
//   z-axis             :  -length-|percentage

.translate3d(@x-axis:_, @y-axis:_, @z-axis:_) {

    & when not (@x-axis=_) and not (@x-axis=_) and not (@x-axis=_) {
        -webkit-transform+_: translate3d(@x-axis, @y-axis, @z-axis);
            -ms-transform+_: translate3d(@x-axis, @y-axis, @z-axis);   
                transform+_: translate3d(@x-axis, @y-axis, @z-axis);
    }
}
