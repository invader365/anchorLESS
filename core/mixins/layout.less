//
//  Layout properties

//
//  .align(@top, @right, @bottom, @left[, @min-query, @max-query]) 
//   ------------------------------------------------------
//   @top      :  auto|length|initial|inherit
//   @right    :  auto|length|initial|inherit
//   @bottom   :  auto|length|initial|inherit
//   @left     :  auto|length|initial|inherit

.align(@top:_, @right:_, @bottom:_, @left:_, @min-query:_, @max-query:_) {

    @minmax: if((@min-query=_ and @max-query=_); _; @min-query, @max-query);

    & when not (@top=_) and (@minmax=_) {
        top: @top;
    }

    & when not (@right=_) and (@minmax=_) {
        right: @right;
    }

    & when not (@bottom=_) and (@minmax=_) {
        bottom: @bottom;
    }

    & when not (@left=_) and (@minmax=_) {
        left: @left;
    }

    & when not (@minmax=_) {
        .mixins(
            @query: @minmax;
            @align: @top, @right, @bottom, @left;
        );
    }
}

.align(@top:_) {

    & when not (@top=_) {
        .align(@top, @top, @top, @top);
    }
}

//
//  .float(@float[, @min-width-query, @max-width-query]);
//   ------------------------------------------------------
//   @float      :  none|left|right|initial|inherit

.float (@float:_, @min-query:_, @max-query:_) {
 
    & when not (@float=_) and (@min-query=_) and (@max-query=_) {
        float: @float;
    }

    & when not (@min-query=_), not (@max-query=_) {
        .mixins(
            @query: @min-query, @max-query;
            @float: @float;
        );
    }
}

//
//   .list-style(@type, @position, @image[, @min-width-query, @max-width-query]);
//   ------------------------------------------------------
//   @type      :  none|disc|circle|square|decimal|decimal-leading-zero|lower-roman|upper-roman|lower-greek|lower-latin|upper-latin|armenian|georgian|lower-alpha|upper-alpha|hiragana|katakana|initial|inherit
//   @position  :  inside|outside|initial|inherit

.list-style(@type:_, @position:_, @image:_) {
    
    @vtype: if((@type=_); disc; @type);
    @vpos:  if((@position=_); outside; @position);
    @img:   if(@image=_; none; if(@image=none; none; url('@{image}')));

    list-style: @vtype @vpos @img;
}

//
//  .position(@position, @top, @right, @bottom, @left[, @min-query, @max-query]);
//   ------------------------------------------------------
//   @position :  static|absolute|fixed|relative|sticky|initial|inherit
//   @top      :  auto|length|initial|inherit
//   @right    :  auto|length|initial|inherit
//   @bottom   :  auto|length|initial|inherit
//   @left     :  auto|length|initial|inherit

.position(@position:_, @top:_, @right:_, @bottom:_, @left:_, @min-query:_, @max-query:_) {

    @minmax: if((@min-query=_ and @max-query=_); _; @min-query, @max-query);

    & when not (@position=_) and (@minmax=_) {
        position: @position;
    }

    & when not (@top=_) and (@minmax=_) {
        top: @top;
    }

    & when not (@right=_) and (@minmax=_) {
        right: @right;
    }

    & when not (@bottom=_) and (@minmax=_) {
        bottom: @bottom;
    }

    & when not (@left=_) and (@minmax=_) {
        left: @left;
    }

    & when not (@minmax=_) {
        .mixins(
            @query: @minmax;
            @position: @position, @top, @right, @bottom, @left;
        );
    }
}

.position(@position:_, @top:_) {
    & when not (@top=_) {
        .position(@position, @top, @top, @top, @top);
    }
}

//
//  .z-index(@index[, @min-query, @max-query]);
//   ------------------------------------------------------
//   @index     :  auto|number|initial|inherit

.z-index(@index:_, @min-query:_, @max-query:_) {

    & when not (@index=_) and (@min-query=_) and (@max-query=_) {
        z-index: @index;
    }

    & when not (@min-query=_), not (@max-query=_) {
        .mixins(
            @query: @min-query, @max-query;
            @z-index: @index;
        );
    }
}
